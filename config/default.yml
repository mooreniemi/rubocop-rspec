AllCops:
  RSpec:
    Patterns:
    # Match any file that contains `_spec.rb` so that FilePath can also flag
    # and correct files with odd extensions like `spec/foo_spec.rb.html`
    - '_spec.rb'
    - '(?:^|/)spec/'

RSpec/AnyInstance:
  Description: 'Check that instances are not being stubbed globally'
  Enabled: true

RSpec/BeEql:
  Description: 'Check for expectations where `be(...)` can be used instead of `eql(...)`'
  Enabled: true

RSpec/HookArgument:
  Description: 'Check the arguments passed to `before`, `around`, and `after`.'
  Enabled: true
  EnforcedStyle: implicit
  SupportedStyles:
  - implicit
  - each
  - example

RSpec/DescribeClass:
  Description: 'Check that the first argument to the top level describe is the tested class or module.'
  Enabled: true

RSpec/DescribedClass:
  Description: 'Use `described_class` for tested class / module'
  SkipBlocks: false
  Enabled: true

RSpec/DescribeMethod:
  Description: 'Checks that the second argument to top level describe is the tested method name.'
  Enabled: true

RSpec/ExampleWording:
  Description: 'Do not use should when describing your tests.'
  Enabled: true
  CustomTransform:
    be: is
    have: has
    not: does not
  IgnoredWords: []

RSpec/EmptyExampleGroup:
  Description: 'Checks for `describe` and `context` groups without tests.'
  Enabled: true
  CustomIncludeMethods: []

RSpec/ExpectActual:
  Description: 'Checks for `expect(...)` calls containing literal values'
  Enabled: true

RSpec/MultipleDescribes:
  Description: 'Checks for multiple top level describes.'
  Enabled: true

RSpec/MultipleExpectations:
  Description: 'Checks for multiple `expect(...)` calls in one example.'
  Enabled: true
  Max: 1

RSpec/NestedGroups:
  Description: 'Checks for multiple levels of context nesting.'
  Enabled: true
  MaxNesting: 2

RSpec/InstanceVariable:
  Description: 'Checks for the usage of instance variables.'
  AssignmentOnly: false
  Enabled: true

RSpec/LetSetup:
  Description: 'Checks for `let!` being used for test setup.'
  Enabled: true

RSpec/LeadingSubject:
  Description: 'Checks for `subject` definitions that come after `let` definitions.'
  Enabled: true

RSpec/FilePath:
  Description: 'Checks the file and folder naming of the spec file.'
  Enabled: true
  CustomTransform:
    RuboCop: rubocop
    RSpec: rspec

RSpec/VerifiedDoubles:
  Description: 'Prefer using verifying doubles over normal doubles.'
  Enabled: true
  IgnoreSymbolicNames: false

RSpec/NotToNot:
  Description: 'Enforces the usage of the same method on all negative message expectations.'
  EnforcedStyle: not_to
  SupportedStyles:
    - not_to
    - to_not
  Enabled: true

RSpec/Focus:
  Description: 'Checks if there are focused specs.'
  Enabled: true

RSpec/ExampleLength:
  Description: 'Checks for long example'
  Enabled: true
  Max: 5

RSpec/MessageExpectation:
  Description: 'Checks for consistent message expectation style.'
  Enabled: true
  EnforcedStyle: allow
  SupportedStyles:
  - allow
  - expect

RSpec/NamedSubject:
  Description: 'Name your RSpec subject if you reference it explicitly'
  Enabled: true

RSpec/SubjectStub:
  Description: 'Checks for stubbed test subjects'
  Enabled: true

RSpec/CapybaraOrdering:
  Description: 'Prevent threading issues in your acceptance tests.'
  Enabled: true
